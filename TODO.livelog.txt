# (from) July 7 2022
# This repo will be actively worked on from now.
# This file will be a ToDo/bits'n'bobs list of things to take care of

ckan/ckan-docker-base: For the base images Dockerfiles (prod and dev) and related scripts
ckan/ckan-docker: For the project-oriented image template (prod and dev). Patching only done in Dev ### This repo!

All the other images should live in separate repos

1. Solr -           use ckan-solr   (https://github.com/ckan/ckan-solr)
2. PostgreSQL -     use current method (base image: postgres:12-alpine from DockerHub, enhanced in a Dockerfile) 
                    ### This may change to be more like Solr though
3. Redis -          use current method (DockerHub image: redis:${REDIS_VERSION} specified as a compose service in the compose file) 
                    latest image to used is redis:6
4. nginx -          use a late(ish) nginx image from DockerHub, enhanced in a Dockerfile)
5. DataPusher -     built from the actual datapusher repo (https://github.com/ckan/datapusher)
6. CKAN -           built from the ckan/ckan-base:2.9.5 base image (which is built from the ckan/ckan-docker-base repo). Include a .dev option
7. CKAN Worker -    add new (ckan worker) container in the compose setup

Versions 2.9 and 2.10 (when it's out) only. Plan the repo layout for having multiple versions - OKFN could used as an example

NB:  Had to update the prerun.py script as it was failing on check_solr_connection


### ToDo (remaining things to think about and/or 'to fix') ###

1.  nginx - what caching should I implement?
2.  DataPusher - needed to use a custom requirements.txt (see https://github.com/ckan/datapusher/pull/251)
3.  Use Multi-Stage images defined in the docker-compose.yml file...for security reasons really. 
    Also check out https://github.com/ckan/ckan/pull/4635 for Francesco's tests
4.  CKAN Worker (maybe)